@model JobMatch.JobCategory
@{
    ViewData["Title"] = "Create";
    <link rel="stylesheet" href="~/css/create.css" />
}
<h1>Create</h1>
<h4>JobCategory</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <input asp-for="Description" class="form-control" />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            @if(User.IsInRole("Admin")){
            <div class="form-group">
                <label asp-for="Status" class="control-label"></label>
                <select asp-for="Status" class="form-control">
                    @foreach (var status in Enum.GetNames(typeof(JobMatch.CategoryStatus)))
                    {
                        <option value="@status">@status</option>
                    }
                </select>
                <span asp-validation-for="Status" class="text-danger"></span>
            </div>
            }
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
            <div asp-action="Index">
                <button type="submit" class="btn btn-secondary">Back to List</button>
            </div>
        </form>
    </div>
</div>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}